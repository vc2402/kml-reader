// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Anglepos90Type ...
type Anglepos90Type float64

// Angle90Type ...
type Angle90Type float64

// Anglepos180Type ...
type Anglepos180Type float64

// Angle180Type ...
type Angle180Type float64

// Angle360Type ...
type Angle360Type float64

// EnumBaseType ...
type EnumBaseType string

// AltitudeModeEnumType ...
type AltitudeModeEnumType string

// SeaFloorAltitudeModeEnumType ...
type SeaFloorAltitudeModeEnumType string

// ColorType is aabbggrr
//
//         ffffffff: opaque white
//         ff000000: opaque black
type ColorType string

// CoordinatesType ...
type CoordinatesType []string

// ColorModeEnumType ...
type ColorModeEnumType string

// DateTimeType ...
type DateTimeType struct {
	XMLName    xml.Name `xml:"dateTimeType"`
	GYearMonth string
	GYear      string
	DateTime   string
	Date       string
}

// DisplayModeEnumType ...
type DisplayModeEnumType string

// FlyToModeEnumType ...
type FlyToModeEnumType string

// GridOriginEnumType ...
type GridOriginEnumType string

// ItemIconStateType ...
type ItemIconStateType []string

// ItemIconStateEnumType ...
type ItemIconStateEnumType string

// ListItemTypeEnumType ...
type ListItemTypeEnumType string

// OuterWidthType ...
type OuterWidthType float32

// PlayModeEnumType ...
type PlayModeEnumType string

// RefreshModeEnumType ...
type RefreshModeEnumType string

// KmlVersionType ...
type KmlVersionType string

// ViewRefreshModeEnumType ...
type ViewRefreshModeEnumType string

// ShapeEnumType ...
type ShapeEnumType string

// StyleStateEnumType ...
type StyleStateEnumType string

// UnitsEnumType ...
type UnitsEnumType string

// Vec2Type ...
type Vec2Type struct {
	XMLName    xml.Name `xml:"vec2Type"`
	XAttr      float64  `xml:"x,attr,omitempty"`
	YAttr      float64  `xml:"y,attr,omitempty"`
	XunitsAttr string   `xml:"xunits,attr,omitempty"`
	YunitsAttr string   `xml:"yunits,attr,omitempty"`
}

// AbstractBgColorGroup is Elements that substitute for kml:AbstractBgColorGroup are kml:bgColor and kml:color.
type AbstractBgColorGroup string

// AbstractExtendedDataGroup is Elements that substitute for kml:AbstractExtendedDataGroup are kml:ExtendedData and kml:Metadata.
type AbstractExtendedDataGroup string

// AbstractLinkGroup is Elements that substitute for kml:AbstractLinkGroup are kml:Link and kml:Url.
type AbstractLinkGroup *AbstractObjectType

// AbstractSnippetGroup is Elements that substitute for kml:AbstractSnippetGroup are kml:snippet and kml:Snippet.
type AbstractSnippetGroup string

// AbstractUpdateOptionGroup is Elements that substitute for kml:AbstractUpdateOptionGroup are kml:Create, kml:Change and kml:Delete.
type AbstractUpdateOptionGroup string

// Address ...
type Address string

// Altitude ...
type Altitude float64

// AltitudeMode ...
type AltitudeMode string

// SeaFloorAltitudeMode ...
type SeaFloorAltitudeMode string

// AltitudeOffset ...
type AltitudeOffset float64

// Angles ...
type Angles string

// BalloonVisibility ...
type BalloonVisibility bool

// Begin ...
type Begin *DateTimeType

// BgColor ...
type BgColor string

// BottomFov ...
type BottomFov float64

// Color ...
type Color string

// AbstractColorMode ...
type AbstractColorMode string

// ColorMode ...
type ColorMode string

// Cookie ...
type Cookie string

// Coord ...
type Coord string

// Coordinates ...
type Coordinates *CoordinatesType

// DelayedStart ...
type DelayedStart float64

// Description ...
type Description string

// DisplayName ...
type DisplayName string

// AbstractDisplayMode ...
type AbstractDisplayMode string

// DisplayMode ...
type DisplayMode string

// DrawOrder ...
type DrawOrder int

// Duration ...
type Duration float64

// East is See kml:AbstractLatLonBoxType regarding the extension of the longitude range in KML 2.3 and the associated contraints on east and west values.
type East float64

// End ...
type End *DateTimeType

// Expires ...
type Expires *DateTimeType

// Extrude ...
type Extrude bool

// Fill ...
type Fill bool

// AbstractFlyToMode ...
type AbstractFlyToMode string

// FlyToMode ...
type FlyToMode string

// FlyToView ...
type FlyToView bool

// AbstractGridOrigin ...
type AbstractGridOrigin string

// GridOrigin ...
type GridOrigin string

// Heading ...
type Heading float64

// Href is not anyURI due to $[x] substitution in
//       PhotoOverlay
type Href string

// HttpQuery ...
type HttpQuery string

// HorizFov ...
type HorizFov float64

// HotSpot ...
type HotSpot *Vec2Type

// Interpolate ...
type Interpolate bool

// AbstractKey ...
type AbstractKey string

// Key ...
type Key string

// Latitude ...
type Latitude float64

// LeftFov ...
type LeftFov float64

// LinkDescription ...
type LinkDescription string

// LinkName ...
type LinkName string

// LinkSnippet ...
type LinkSnippet *SnippetType

// AbstractListItemType ...
type AbstractListItemType string

// ListItemType ...
type ListItemType string

// Longitude ...
type Longitude float64

// MaxSnippetLines ...
type MaxSnippetLines int

// MaxSessionLength ...
type MaxSessionLength float64

// Message ...
type Message string

// MinAltitude ...
type MinAltitude float64

// MinFadeExtent ...
type MinFadeExtent float64

// MinLodPixels ...
type MinLodPixels float64

// MinRefreshPeriod ...
type MinRefreshPeriod float64

// MaxAltitude ...
type MaxAltitude float64

// MaxFadeExtent ...
type MaxFadeExtent float64

// MaxLodPixels ...
type MaxLodPixels float64

// MaxHeight ...
type MaxHeight int

// MaxWidth ...
type MaxWidth int

// Name ...
type Name string

// Near ...
type Near float64

// North is Specifies the north latitude value in decimal degrees in the interval: -180 < north ≤ 180. Note that the value of kml:north is never equal to -180 because it must be strictly greater than the value of kml:south. Note also that values of |latitude| > 90 are atypical, but allowed for backwards compatibility with KML 2.2. The default value of kml:north is 90 (which differs from the default value of 180 in KML 2.2).
type North float64

// Open ...
type Open bool

// Outline ...
type Outline bool

// OverlayXY ...
type OverlayXY *Vec2Type

// PhoneNumber ...
type PhoneNumber string

// AbstractPlayMode ...
type AbstractPlayMode string

// PlayMode ...
type PlayMode string

// Range ...
type Range float64

// AbstractRefreshMode ...
type AbstractRefreshMode string

// RefreshMode ...
type RefreshMode string

// RefreshInterval ...
type RefreshInterval float64

// RefreshVisibility ...
type RefreshVisibility bool

// RightFov ...
type RightFov float64

// Roll ...
type Roll float64

// Rotation ...
type Rotation float64

// RotationXY ...
type RotationXY *Vec2Type

// Scale ...
type Scale float64

// ScreenXY ...
type ScreenXY *Vec2Type

// AbstractShape ...
type AbstractShape string

// Shape ...
type Shape string

// Size ...
type Size *Vec2Type

// South is Specifies the south latitude value in decimal degrees in the interval: -180 ≤ south < 180. Note that the value of kml:south is never equal to 180 because it must be strictly less than the value of kml:north. Note also that values of |latitude| > 90 are atypical, but allowed for backwards compatibility with KML 2.2. The default value of kml:south is -90 (which differs from the default value of -180 in KML 2.2).
type South float64

// SourceHref ...
type SourceHref string

// Snippet ...
type Snippet string

// AbstractState ...
type AbstractState *AnySimpleType

// State ...
type State *ItemIconStateType

// StyleUrl ...
type StyleUrl string

// TargetHref ...
type TargetHref string

// Tessellate ...
type Tessellate bool

// Text ...
type Text string

// TextColor ...
type TextColor string

// TileSize ...
type TileSize int

// Tilt ...
type Tilt float64

// TopFov ...
type TopFov float64

// Value ...
type Value *AnySimpleType

// ViewBoundScale ...
type ViewBoundScale float64

// ViewFormat ...
type ViewFormat string

// AbstractViewRefreshMode ...
type AbstractViewRefreshMode string

// ViewRefreshMode ...
type ViewRefreshMode string

// ViewRefreshTime ...
type ViewRefreshTime float64

// Visibility ...
type Visibility bool

// West is See kml:AbstractLatLonBoxType regarding the extension of the longitude range KML 2.3 and the associated contraints on east and west values.
type West float64

// When ...
type When *DateTimeType

// Width ...
type Width float64

// X ...
type X float64

// Y ...
type Y float64

// Z ...
type Z float64

// AltitudeModeGroup ...
type AltitudeModeGroup struct {
	KmlAltitudeMode                     string
	KmlSeaFloorAltitudeMode             string
	KmlAltitudeModeSimpleExtensionGroup []*AnySimpleType
	KmlAltitudeModeObjectExtensionGroup []*AltitudeModeObjectExtensionGroup
}

// AltitudeModeSimpleExtensionGroup ...
type AltitudeModeSimpleExtensionGroup *AnySimpleType

// AltitudeModeObjectExtensionGroup ...
type AltitudeModeObjectExtensionGroup *AltitudeModeObjectExtensionGroup

// AbstractObjectGroup ...
type AbstractObjectGroup *AbstractObjectType

// AbstractObjectType ...
type AbstractObjectType struct {
	KmlIdAttributes               *IdAttributes
	KmlObjectSimpleExtensionGroup []*AnySimpleType `xml:"kml:ObjectSimpleExtensionGroup"`
}

// ObjectSimpleExtensionGroup ...
type ObjectSimpleExtensionGroup *AnySimpleType

// IdAttributes ...
type IdAttributes struct {
	XMLName      xml.Name `xml:"idAttributes"`
	IdAttr       string   `xml:"id,attr,omitempty"`
	TargetIdAttr string   `xml:"targetId,attr,omitempty"`
}

// AbstractFeatureGroup ...
type AbstractFeatureGroup *AbstractFeatureType

// AbstractFeatureType ...
type AbstractFeatureType struct {
	KmlName                                string                                 `xml:"kml:name"`
	KmlVisibility                          bool                                   `xml:"kml:visibility"`
	KmlBalloonVisibility                   bool                                   `xml:"kml:balloonVisibility"`
	KmlOpen                                bool                                   `xml:"kml:open"`
	AtomAuthor                             *AtomPersonConstruct                   `xml:"atom:author"`
	AtomLink                               *Link                                  `xml:"atom:link"`
	KmlAddress                             string                                 `xml:"kml:address"`
	XalAddressDetails                      *AddressDetails                        `xml:"xal:AddressDetails"`
	KmlPhoneNumber                         string                                 `xml:"kml:phoneNumber"`
	KmlAbstractSnippetGroup                string                                 `xml:"kml:AbstractSnippetGroup"`
	KmlDescription                         string                                 `xml:"kml:description"`
	KmlAbstractViewGroup                   *AbstractViewType                      `xml:"kml:AbstractViewGroup"`
	KmlAbstractTimePrimitiveGroup          *AbstractTimePrimitiveType             `xml:"kml:AbstractTimePrimitiveGroup"`
	KmlStyleUrl                            string                                 `xml:"kml:styleUrl"`
	KmlAbstractStyleSelectorGroup          []*AbstractStyleSelectorType           `xml:"kml:AbstractStyleSelectorGroup"`
	KmlRegion                              *RegionType                            `xml:"kml:Region"`
	KmlAbstractExtendedDataGroup           string                                 `xml:"kml:AbstractExtendedDataGroup"`
	KmlAbstractFeatureSimpleExtensionGroup []*AnySimpleType                       `xml:"kml:AbstractFeatureSimpleExtensionGroup"`
	KmlAbstractFeatureObjectExtensionGroup []*AbstractFeatureObjectExtensionGroup `xml:"kml:AbstractFeatureObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractFeatureObjectExtensionGroup ...
type AbstractFeatureObjectExtensionGroup *AbstractFeatureObjectExtensionGroup

// AbstractFeatureSimpleExtensionGroup ...
type AbstractFeatureSimpleExtensionGroup *AnySimpleType

// Snippet is kml:Snippet was deprecated in KML 2.2
type Snippet *SnippetType

// SnippetType ...
type SnippetType struct {
	MaxLinesAttr int    `xml:"maxLines,attr,omitempty"`
	Value        string `xml:",chardata"`
}

// AbstractViewGroup ...
type AbstractViewGroup *AbstractViewType

// AbstractViewType ...
type AbstractViewType struct {
	KmlAbstractTimePrimitiveGroup       *AbstractTimePrimitiveType          `xml:"kml:AbstractTimePrimitiveGroup"`
	KmlAbstractViewSimpleExtensionGroup []*AnySimpleType                    `xml:"kml:AbstractViewSimpleExtensionGroup"`
	KmlAbstractViewObjectExtensionGroup []*AbstractViewObjectExtensionGroup `xml:"kml:AbstractViewObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractViewSimpleExtensionGroup ...
type AbstractViewSimpleExtensionGroup *AnySimpleType

// AbstractViewObjectExtensionGroup ...
type AbstractViewObjectExtensionGroup *AbstractViewObjectExtensionGroup

// LookAt ...
type LookAt *LookAtType

// LookAtType ...
type LookAtType struct {
	KmlAltitudeModeGroup          *AltitudeModeGroup
	KmlLongitude                  float64                       `xml:"kml:longitude"`
	KmlLatitude                   float64                       `xml:"kml:latitude"`
	KmlAltitude                   float64                       `xml:"kml:altitude"`
	KmlHeading                    float64                       `xml:"kml:heading"`
	KmlTilt                       float64                       `xml:"kml:tilt"`
	KmlRange                      float64                       `xml:"kml:range"`
	KmlHorizFov                   float64                       `xml:"kml:horizFov"`
	KmlLookAtSimpleExtensionGroup []*AnySimpleType              `xml:"kml:LookAtSimpleExtensionGroup"`
	KmlLookAtObjectExtensionGroup []*LookAtObjectExtensionGroup `xml:"kml:LookAtObjectExtensionGroup"`
	*AbstractViewType
}

// LookAtSimpleExtensionGroup ...
type LookAtSimpleExtensionGroup *AnySimpleType

// LookAtObjectExtensionGroup ...
type LookAtObjectExtensionGroup *LookAtObjectExtensionGroup

// Camera ...
type Camera *CameraType

// CameraType ...
type CameraType struct {
	KmlAltitudeModeGroup          *AltitudeModeGroup
	KmlLongitude                  float64                       `xml:"kml:longitude"`
	KmlLatitude                   float64                       `xml:"kml:latitude"`
	KmlAltitude                   float64                       `xml:"kml:altitude"`
	KmlHeading                    float64                       `xml:"kml:heading"`
	KmlTilt                       float64                       `xml:"kml:tilt"`
	KmlRoll                       float64                       `xml:"kml:roll"`
	KmlHorizFov                   float64                       `xml:"kml:horizFov"`
	KmlCameraSimpleExtensionGroup []*AnySimpleType              `xml:"kml:CameraSimpleExtensionGroup"`
	KmlCameraObjectExtensionGroup []*CameraObjectExtensionGroup `xml:"kml:CameraObjectExtensionGroup"`
	*AbstractViewType
}

// CameraSimpleExtensionGroup ...
type CameraSimpleExtensionGroup *AnySimpleType

// CameraObjectExtensionGroup is kml:MetadataType was deprecated in KML 2.2
type CameraObjectExtensionGroup *CameraObjectExtensionGroup

// Metadata is kml:Metadata was deprecated in KML 2.2
type Metadata *MetadataType

// MetadataType ...
type MetadataType struct {
}

// ExtendedData ...
type ExtendedData *ExtendedDataType

// ExtendedDataType ...
type ExtendedDataType struct {
	KmlData       []*DataType       `xml:"kml:Data"`
	KmlSchemaData []*SchemaDataType `xml:"kml:SchemaData"`
}

// SchemaData ...
type SchemaData *SchemaDataType

// SchemaDataType ...
type SchemaDataType struct {
	SchemaUrlAttr          string                 `xml:"schemaUrl,attr,omitempty"`
	KmlSimpleData          []*SimpleDataType      `xml:"kml:SimpleData"`
	KmlSimpleArrayData     []*SimpleArrayDataType `xml:"kml:SimpleArrayData"`
	KmlSchemaDataExtension []*SchemaDataExtension `xml:"kml:SchemaDataExtension"`
	*AbstractObjectType
}

// SchemaDataExtension ...
type SchemaDataExtension *SchemaDataExtension

// SimpleData ...
type SimpleData *SimpleDataType

// SimpleDataType ...
type SimpleDataType struct {
	NameAttr string `xml:"name,attr"`
	*AnySimpleType
}

// SimpleArrayData ...
type SimpleArrayData *SimpleArrayDataType

// SimpleArrayDataType ...
type SimpleArrayDataType struct {
	NameAttr                    string                      `xml:"name,attr,omitempty"`
	KmlValue                    []*AnySimpleType            `xml:"kml:value"`
	KmlSimpleArrayDataExtension []*SimpleArrayDataExtension `xml:"kml:SimpleArrayDataExtension"`
	*AbstractObjectType
}

// SimpleArrayDataExtension is The symbol for the unit of measure for the kml:Data values.
type SimpleArrayDataExtension *SimpleArrayDataExtension

// Data ...
type Data *DataType

// DataType ...
type DataType struct {
	NameAttr         string           `xml:"name,attr,omitempty"`
	UomAttr          string           `xml:"uom,attr,omitempty"`
	KmlDisplayName   string           `xml:"kml:displayName"`
	KmlValue         *AnySimpleType   `xml:"kml:value"`
	KmlDataExtension []*DataExtension `xml:"kml:DataExtension"`
	*AbstractObjectType
}

// DataExtension ...
type DataExtension *DataExtension

// AbstractContainerGroup ...
type AbstractContainerGroup *AbstractContainerType

// AbstractContainerType ...
type AbstractContainerType struct {
	KmlAbstractContainerSimpleExtensionGroup []*AnySimpleType                         `xml:"kml:AbstractContainerSimpleExtensionGroup"`
	KmlAbstractContainerObjectExtensionGroup []*AbstractContainerObjectExtensionGroup `xml:"kml:AbstractContainerObjectExtensionGroup"`
	*AbstractFeatureType
}

// AbstractContainerSimpleExtensionGroup ...
type AbstractContainerSimpleExtensionGroup *AnySimpleType

// AbstractContainerObjectExtensionGroup ...
type AbstractContainerObjectExtensionGroup *AbstractContainerObjectExtensionGroup

// AbstractGeometryGroup ...
type AbstractGeometryGroup *AbstractGeometryType

// AbstractGeometryType ...
type AbstractGeometryType struct {
	KmlAbstractGeometrySimpleExtensionGroup []*AnySimpleType                        `xml:"kml:AbstractGeometrySimpleExtensionGroup"`
	KmlAbstractGeometryObjectExtensionGroup []*AbstractGeometryObjectExtensionGroup `xml:"kml:AbstractGeometryObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractGeometrySimpleExtensionGroup ...
type AbstractGeometrySimpleExtensionGroup *AnySimpleType

// AbstractGeometryObjectExtensionGroup ...
type AbstractGeometryObjectExtensionGroup *AbstractGeometryObjectExtensionGroup

// AbstractOverlayGroup ...
type AbstractOverlayGroup *AbstractOverlayType

// AbstractOverlayType ...
type AbstractOverlayType struct {
	KmlColor                               string                                 `xml:"kml:color"`
	KmlDrawOrder                           int                                    `xml:"kml:drawOrder"`
	KmlIcon                                *LinkType                              `xml:"kml:Icon"`
	KmlAbstractOverlaySimpleExtensionGroup []*AnySimpleType                       `xml:"kml:AbstractOverlaySimpleExtensionGroup"`
	KmlAbstractOverlayObjectExtensionGroup []*AbstractOverlayObjectExtensionGroup `xml:"kml:AbstractOverlayObjectExtensionGroup"`
	*AbstractFeatureType
}

// AbstractOverlaySimpleExtensionGroup ...
type AbstractOverlaySimpleExtensionGroup *AnySimpleType

// AbstractOverlayObjectExtensionGroup ...
type AbstractOverlayObjectExtensionGroup *AbstractOverlayObjectExtensionGroup

// AbstractStyleSelectorGroup ...
type AbstractStyleSelectorGroup *AbstractStyleSelectorType

// AbstractStyleSelectorType ...
type AbstractStyleSelectorType struct {
	KmlAbstractStyleSelectorSimpleExtensionGroup []*AnySimpleType                             `xml:"kml:AbstractStyleSelectorSimpleExtensionGroup"`
	KmlAbstractStyleSelectorObjectExtensionGroup []*AbstractStyleSelectorObjectExtensionGroup `xml:"kml:AbstractStyleSelectorObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractStyleSelectorSimpleExtensionGroup ...
type AbstractStyleSelectorSimpleExtensionGroup *AnySimpleType

// AbstractStyleSelectorObjectExtensionGroup ...
type AbstractStyleSelectorObjectExtensionGroup *AbstractStyleSelectorObjectExtensionGroup

// AbstractTimePrimitiveGroup ...
type AbstractTimePrimitiveGroup *AbstractTimePrimitiveType

// AbstractTimePrimitiveType ...
type AbstractTimePrimitiveType struct {
	KmlAbstractTimePrimitiveSimpleExtensionGroup []*AnySimpleType                             `xml:"kml:AbstractTimePrimitiveSimpleExtensionGroup"`
	KmlAbstractTimePrimitiveObjectExtensionGroup []*AbstractTimePrimitiveObjectExtensionGroup `xml:"kml:AbstractTimePrimitiveObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractTimePrimitiveSimpleExtensionGroup ...
type AbstractTimePrimitiveSimpleExtensionGroup *AnySimpleType

// AbstractTimePrimitiveObjectExtensionGroup is kml:Model is not a valid child of kml:Delete in versions of KML prior to 2.3.0.
type AbstractTimePrimitiveObjectExtensionGroup *AbstractTimePrimitiveObjectExtensionGroup

// Kml is <kml> is the root element.
type Kml *KmlType

// KmlType ...
type KmlType struct {
	HintAttr                   string                     `xml:"hint,attr,omitempty"`
	VersionAttr                string                     `xml:"version,attr,omitempty"`
	KmlNetworkLinkControl      *NetworkLinkControlType    `xml:"kml:NetworkLinkControl"`
	KmlAbstractFeatureGroup    *AbstractFeatureType       `xml:"kml:AbstractFeatureGroup"`
	KmlKmlSimpleExtensionGroup []*AnySimpleType           `xml:"kml:KmlSimpleExtensionGroup"`
	KmlKmlObjectExtensionGroup []*KmlObjectExtensionGroup `xml:"kml:KmlObjectExtensionGroup"`
}

// KmlSimpleExtensionGroup ...
type KmlSimpleExtensionGroup *AnySimpleType

// KmlObjectExtensionGroup ...
type KmlObjectExtensionGroup *KmlObjectExtensionGroup

// NetworkLinkControl ...
type NetworkLinkControl *NetworkLinkControlType

// NetworkLinkControlType ...
type NetworkLinkControlType struct {
	KmlMinRefreshPeriod                       float64                                   `xml:"kml:minRefreshPeriod"`
	KmlMaxSessionLength                       float64                                   `xml:"kml:maxSessionLength"`
	KmlCookie                                 string                                    `xml:"kml:cookie"`
	KmlMessage                                string                                    `xml:"kml:message"`
	KmlLinkName                               string                                    `xml:"kml:linkName"`
	KmlLinkDescription                        string                                    `xml:"kml:linkDescription"`
	KmlLinkSnippet                            *SnippetType                              `xml:"kml:linkSnippet"`
	KmlExpires                                *DateTimeType                             `xml:"kml:expires"`
	KmlUpdate                                 *UpdateType                               `xml:"kml:Update"`
	KmlAbstractViewGroup                      *AbstractViewType                         `xml:"kml:AbstractViewGroup"`
	KmlNetworkLinkControlSimpleExtensionGroup []*AnySimpleType                          `xml:"kml:NetworkLinkControlSimpleExtensionGroup"`
	KmlNetworkLinkControlObjectExtensionGroup []*NetworkLinkControlObjectExtensionGroup `xml:"kml:NetworkLinkControlObjectExtensionGroup"`
}

// NetworkLinkControlSimpleExtensionGroup ...
type NetworkLinkControlSimpleExtensionGroup *AnySimpleType

// NetworkLinkControlObjectExtensionGroup ...
type NetworkLinkControlObjectExtensionGroup *NetworkLinkControlObjectExtensionGroup

// Document ...
type Document *DocumentType

// DocumentType ...
type DocumentType struct {
	KmlSchema                       []*SchemaType                   `xml:"kml:Schema"`
	KmlAbstractFeatureGroup         []*AbstractFeatureType          `xml:"kml:AbstractFeatureGroup"`
	KmlDocumentSimpleExtensionGroup []*AnySimpleType                `xml:"kml:DocumentSimpleExtensionGroup"`
	KmlDocumentObjectExtensionGroup []*DocumentObjectExtensionGroup `xml:"kml:DocumentObjectExtensionGroup"`
	*AbstractContainerType
}

// DocumentSimpleExtensionGroup ...
type DocumentSimpleExtensionGroup *AnySimpleType

// DocumentObjectExtensionGroup ...
type DocumentObjectExtensionGroup *DocumentObjectExtensionGroup

// Schema ...
type Schema *SchemaType

// SchemaType ...
type SchemaType struct {
	NameAttr            string                  `xml:"name,attr,omitempty"`
	IdAttr              string                  `xml:"id,attr,omitempty"`
	KmlSimpleField      []*SimpleFieldType      `xml:"kml:SimpleField"`
	KmlSimpleArrayField []*SimpleArrayFieldType `xml:"kml:SimpleArrayField"`
	KmlSchemaExtension  []*SchemaExtension      `xml:"kml:SchemaExtension"`
}

// SchemaExtension is The symbol for the unit of measure for the kml:SimpleField values.
type SchemaExtension *SchemaExtension

// SimpleField ...
type SimpleField *SimpleFieldType

// SimpleFieldType ...
type SimpleFieldType struct {
	TypeAttr                string                  `xml:"type,attr,omitempty"`
	NameAttr                string                  `xml:"name,attr,omitempty"`
	UomAttr                 string                  `xml:"uom,attr,omitempty"`
	KmlDisplayName          string                  `xml:"kml:displayName"`
	KmlSimpleFieldExtension []*SimpleFieldExtension `xml:"kml:SimpleFieldExtension"`
}

// SimpleFieldExtension is The symbol for the unit of measure for the kml:SimpleArrayData values.
type SimpleFieldExtension *SimpleFieldExtension

// SimpleArrayField ...
type SimpleArrayField *SimpleArrayFieldType

// SimpleArrayFieldType ...
type SimpleArrayFieldType struct {
	TypeAttr                     string                       `xml:"type,attr,omitempty"`
	NameAttr                     string                       `xml:"name,attr,omitempty"`
	UomAttr                      string                       `xml:"uom,attr,omitempty"`
	KmlDisplayName               string                       `xml:"kml:displayName"`
	KmlSimpleArrayFieldExtension []*SimpleArrayFieldExtension `xml:"kml:SimpleArrayFieldExtension"`
}

// SimpleArrayFieldExtension ...
type SimpleArrayFieldExtension *SimpleArrayFieldExtension

// Folder ...
type Folder *FolderType

// FolderType ...
type FolderType struct {
	KmlAbstractFeatureGroup       []*AbstractFeatureType        `xml:"kml:AbstractFeatureGroup"`
	KmlFolderSimpleExtensionGroup []*AnySimpleType              `xml:"kml:FolderSimpleExtensionGroup"`
	KmlFolderObjectExtensionGroup []*FolderObjectExtensionGroup `xml:"kml:FolderObjectExtensionGroup"`
	*AbstractContainerType
}

// FolderSimpleExtensionGroup ...
type FolderSimpleExtensionGroup *AnySimpleType

// FolderObjectExtensionGroup ...
type FolderObjectExtensionGroup *FolderObjectExtensionGroup

// Placemark ...
type Placemark *PlacemarkType

// PlacemarkType ...
type PlacemarkType struct {
	KmlAbstractGeometryGroup         *AbstractGeometryType            `xml:"kml:AbstractGeometryGroup"`
	KmlPlacemarkSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:PlacemarkSimpleExtensionGroup"`
	KmlPlacemarkObjectExtensionGroup []*PlacemarkObjectExtensionGroup `xml:"kml:PlacemarkObjectExtensionGroup"`
	*AbstractFeatureType
}

// PlacemarkSimpleExtensionGroup ...
type PlacemarkSimpleExtensionGroup *AnySimpleType

// PlacemarkObjectExtensionGroup ...
type PlacemarkObjectExtensionGroup *PlacemarkObjectExtensionGroup

// NetworkLink ...
type NetworkLink *NetworkLinkType

// NetworkLinkType ...
type NetworkLinkType struct {
	KmlRefreshVisibility               bool                               `xml:"kml:refreshVisibility"`
	KmlFlyToView                       bool                               `xml:"kml:flyToView"`
	KmlAbstractLinkGroup               *AbstractObjectType                `xml:"kml:AbstractLinkGroup"`
	KmlNetworkLinkSimpleExtensionGroup []*AnySimpleType                   `xml:"kml:NetworkLinkSimpleExtensionGroup"`
	KmlNetworkLinkObjectExtensionGroup []*NetworkLinkObjectExtensionGroup `xml:"kml:NetworkLinkObjectExtensionGroup"`
	*AbstractFeatureType
}

// NetworkLinkSimpleExtensionGroup ...
type NetworkLinkSimpleExtensionGroup *AnySimpleType

// NetworkLinkObjectExtensionGroup is kml:LatLonQuad is prohibited in kml:Region. Use kml:LatLonAltBox instead.
type NetworkLinkObjectExtensionGroup *NetworkLinkObjectExtensionGroup

// Region ...
type Region *RegionType

// RegionType ...
type RegionType struct {
	KmlAbstractExtentGroup        *AbstractExtentType           `xml:"kml:AbstractExtentGroup"`
	KmlLod                        *LodType                      `xml:"kml:Lod"`
	KmlRegionSimpleExtensionGroup []*AnySimpleType              `xml:"kml:RegionSimpleExtensionGroup"`
	KmlRegionObjectExtensionGroup []*RegionObjectExtensionGroup `xml:"kml:RegionObjectExtensionGroup"`
	*AbstractObjectType
}

// RegionSimpleExtensionGroup ...
type RegionSimpleExtensionGroup *AnySimpleType

// RegionObjectExtensionGroup ...
type RegionObjectExtensionGroup *RegionObjectExtensionGroup

// LatLonAltBox ...
type LatLonAltBox *LatLonAltBoxType

// LatLonAltBoxType ...
type LatLonAltBoxType struct {
	KmlAltitudeModeGroup                *AltitudeModeGroup
	KmlMinAltitude                      float64                             `xml:"kml:minAltitude"`
	KmlMaxAltitude                      float64                             `xml:"kml:maxAltitude"`
	KmlLatLonAltBoxSimpleExtensionGroup []*AnySimpleType                    `xml:"kml:LatLonAltBoxSimpleExtensionGroup"`
	KmlLatLonAltBoxObjectExtensionGroup []*LatLonAltBoxObjectExtensionGroup `xml:"kml:LatLonAltBoxObjectExtensionGroup"`
	*AbstractLatLonBoxType
}

// LatLonAltBoxSimpleExtensionGroup ...
type LatLonAltBoxSimpleExtensionGroup *AnySimpleType

// LatLonAltBoxObjectExtensionGroup ...
type LatLonAltBoxObjectExtensionGroup *LatLonAltBoxObjectExtensionGroup

// Lod ...
type Lod *LodType

// LodType ...
type LodType struct {
	KmlMinLodPixels            float64                    `xml:"kml:minLodPixels"`
	KmlMaxLodPixels            float64                    `xml:"kml:maxLodPixels"`
	KmlMinFadeExtent           float64                    `xml:"kml:minFadeExtent"`
	KmlMaxFadeExtent           float64                    `xml:"kml:maxFadeExtent"`
	KmlLodSimpleExtensionGroup []*AnySimpleType           `xml:"kml:LodSimpleExtensionGroup"`
	KmlLodObjectExtensionGroup []*LodObjectExtensionGroup `xml:"kml:LodObjectExtensionGroup"`
	*AbstractObjectType
}

// LodSimpleExtensionGroup ...
type LodSimpleExtensionGroup *AnySimpleType

// LodObjectExtensionGroup ...
type LodObjectExtensionGroup *LodObjectExtensionGroup

// Icon ...
type Icon *LinkType

// Link ...
type Link *LinkType

// Url is kml:Url was deprecated in KML 2.2
type Url *LinkType

// LinkType ...
type LinkType struct {
	KmlAbstractRefreshMode      string                      `xml:"kml:abstractRefreshMode"`
	KmlRefreshInterval          float64                     `xml:"kml:refreshInterval"`
	KmlAbstractViewRefreshMode  string                      `xml:"kml:abstractViewRefreshMode"`
	KmlViewRefreshTime          float64                     `xml:"kml:viewRefreshTime"`
	KmlViewBoundScale           float64                     `xml:"kml:viewBoundScale"`
	KmlViewFormat               string                      `xml:"kml:viewFormat"`
	KmlHttpQuery                string                      `xml:"kml:httpQuery"`
	KmlLinkSimpleExtensionGroup []*AnySimpleType            `xml:"kml:LinkSimpleExtensionGroup"`
	KmlLinkObjectExtensionGroup []*LinkObjectExtensionGroup `xml:"kml:LinkObjectExtensionGroup"`
	*BasicLinkType
}

// LinkSimpleExtensionGroup ...
type LinkSimpleExtensionGroup *AnySimpleType

// LinkObjectExtensionGroup ...
type LinkObjectExtensionGroup *LinkObjectExtensionGroup

// MultiGeometry ...
type MultiGeometry *MultiGeometryType

// MultiGeometryType ...
type MultiGeometryType struct {
	KmlAbstractGeometryGroup             []*AbstractGeometryType              `xml:"kml:AbstractGeometryGroup"`
	KmlMultiGeometrySimpleExtensionGroup []*AnySimpleType                     `xml:"kml:MultiGeometrySimpleExtensionGroup"`
	KmlMultiGeometryObjectExtensionGroup []*MultiGeometryObjectExtensionGroup `xml:"kml:MultiGeometryObjectExtensionGroup"`
	*AbstractGeometryType
}

// MultiGeometrySimpleExtensionGroup ...
type MultiGeometrySimpleExtensionGroup *AnySimpleType

// MultiGeometryObjectExtensionGroup ...
type MultiGeometryObjectExtensionGroup *MultiGeometryObjectExtensionGroup

// Point ...
type Point *PointType

// PointType ...
type PointType struct {
	KmlAltitudeModeGroup         *AltitudeModeGroup
	KmlExtrude                   bool                         `xml:"kml:extrude"`
	KmlCoordinates               *CoordinatesType             `xml:"kml:coordinates"`
	KmlPointSimpleExtensionGroup []*AnySimpleType             `xml:"kml:PointSimpleExtensionGroup"`
	KmlPointObjectExtensionGroup []*PointObjectExtensionGroup `xml:"kml:PointObjectExtensionGroup"`
	*AbstractGeometryType
}

// PointSimpleExtensionGroup ...
type PointSimpleExtensionGroup *AnySimpleType

// PointObjectExtensionGroup ...
type PointObjectExtensionGroup *PointObjectExtensionGroup

// LineString ...
type LineString *LineStringType

// LineStringType ...
type LineStringType struct {
	KmlAltitudeModeGroup              *AltitudeModeGroup
	KmlExtrude                        bool                              `xml:"kml:extrude"`
	KmlTessellate                     bool                              `xml:"kml:tessellate"`
	KmlCoordinates                    *CoordinatesType                  `xml:"kml:coordinates"`
	KmlAltitudeOffset                 float64                           `xml:"kml:altitudeOffset"`
	KmlLineStringSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:LineStringSimpleExtensionGroup"`
	KmlLineStringObjectExtensionGroup []*LineStringObjectExtensionGroup `xml:"kml:LineStringObjectExtensionGroup"`
	*AbstractGeometryType
}

// LineStringSimpleExtensionGroup ...
type LineStringSimpleExtensionGroup *AnySimpleType

// LineStringObjectExtensionGroup ...
type LineStringObjectExtensionGroup *LineStringObjectExtensionGroup

// LinearRing ...
type LinearRing *LinearRingType

// LinearRingType ...
type LinearRingType struct {
	KmlAltitudeModeGroup              *AltitudeModeGroup
	KmlExtrude                        bool                              `xml:"kml:extrude"`
	KmlTessellate                     bool                              `xml:"kml:tessellate"`
	KmlCoordinates                    *CoordinatesType                  `xml:"kml:coordinates"`
	KmlAltitudeOffset                 float64                           `xml:"kml:altitudeOffset"`
	KmlLinearRingSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:LinearRingSimpleExtensionGroup"`
	KmlLinearRingObjectExtensionGroup []*LinearRingObjectExtensionGroup `xml:"kml:LinearRingObjectExtensionGroup"`
	*AbstractGeometryType
}

// LinearRingSimpleExtensionGroup ...
type LinearRingSimpleExtensionGroup *AnySimpleType

// LinearRingObjectExtensionGroup ...
type LinearRingObjectExtensionGroup *LinearRingObjectExtensionGroup

// Polygon ...
type Polygon *PolygonType

// PolygonType ...
type PolygonType struct {
	KmlAltitudeModeGroup           *AltitudeModeGroup
	KmlExtrude                     bool                           `xml:"kml:extrude"`
	KmlTessellate                  bool                           `xml:"kml:tessellate"`
	KmlOuterBoundaryIs             *BoundaryType                  `xml:"kml:outerBoundaryIs"`
	KmlInnerBoundaryIs             []*BoundaryType                `xml:"kml:innerBoundaryIs"`
	KmlPolygonSimpleExtensionGroup []*AnySimpleType               `xml:"kml:PolygonSimpleExtensionGroup"`
	KmlPolygonObjectExtensionGroup []*PolygonObjectExtensionGroup `xml:"kml:PolygonObjectExtensionGroup"`
	*AbstractGeometryType
}

// PolygonSimpleExtensionGroup ...
type PolygonSimpleExtensionGroup *AnySimpleType

// PolygonObjectExtensionGroup ...
type PolygonObjectExtensionGroup *PolygonObjectExtensionGroup

// OuterBoundaryIs ...
type OuterBoundaryIs *BoundaryType

// InnerBoundaryIs ...
type InnerBoundaryIs *BoundaryType

// BoundaryType ...
type BoundaryType struct {
	KmlLinearRing                   *LinearRingType                 `xml:"kml:LinearRing"`
	KmlBoundarySimpleExtensionGroup []*AnySimpleType                `xml:"kml:BoundarySimpleExtensionGroup"`
	KmlBoundaryObjectExtensionGroup []*BoundaryObjectExtensionGroup `xml:"kml:BoundaryObjectExtensionGroup"`
}

// BoundarySimpleExtensionGroup ...
type BoundarySimpleExtensionGroup *AnySimpleType

// BoundaryObjectExtensionGroup ...
type BoundaryObjectExtensionGroup *BoundaryObjectExtensionGroup

// Model ...
type Model *ModelType

// ModelType ...
type ModelType struct {
	KmlAltitudeModeGroup         *AltitudeModeGroup
	KmlLocation                  *LocationType                `xml:"kml:Location"`
	KmlOrientation               *OrientationType             `xml:"kml:Orientation"`
	KmlScale                     *ScaleType                   `xml:"kml:Scale"`
	KmlLink                      *LinkType                    `xml:"kml:Link"`
	KmlResourceMap               *ResourceMapType             `xml:"kml:ResourceMap"`
	KmlModelSimpleExtensionGroup []*AnySimpleType             `xml:"kml:ModelSimpleExtensionGroup"`
	KmlModelObjectExtensionGroup []*ModelObjectExtensionGroup `xml:"kml:ModelObjectExtensionGroup"`
	*AbstractGeometryType
}

// ModelSimpleExtensionGroup ...
type ModelSimpleExtensionGroup *AnySimpleType

// ModelObjectExtensionGroup is If kml:angles appears in kml:Track there must be an equal number of kml:angles and kml:when elements.
type ModelObjectExtensionGroup *ModelObjectExtensionGroup

// Track ...
type Track *TrackType

// TrackType ...
type TrackType struct {
	KmlAltitudeModeGroup         *AltitudeModeGroup
	KmlExtrude                   bool                         `xml:"kml:extrude"`
	KmlTessellate                bool                         `xml:"kml:tessellate"`
	KmlWhen                      []*DateTimeType              `xml:"kml:when"`
	KmlCoord                     []string                     `xml:"kml:coord"`
	KmlAngles                    []string                     `xml:"kml:angles"`
	KmlModel                     *ModelType                   `xml:"kml:Model"`
	KmlExtendedData              *ExtendedDataType            `xml:"kml:ExtendedData"`
	KmlTrackSimpleExtensionGroup []*AnySimpleType             `xml:"kml:TrackSimpleExtensionGroup"`
	KmlTrackObjectExtensionGroup []*TrackObjectExtensionGroup `xml:"kml:TrackObjectExtensionGroup"`
	*AbstractGeometryType
}

// TrackSimpleExtensionGroup ...
type TrackSimpleExtensionGroup *AnySimpleType

// TrackObjectExtensionGroup ...
type TrackObjectExtensionGroup *TrackObjectExtensionGroup

// MultiTrack ...
type MultiTrack *MultiTrackType

// MultiTrackType ...
type MultiTrackType struct {
	KmlAltitudeModeGroup              *AltitudeModeGroup
	KmlInterpolate                    bool                              `xml:"kml:interpolate"`
	KmlTrack                          []*TrackType                      `xml:"kml:Track"`
	KmlMultiTrackSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:MultiTrackSimpleExtensionGroup"`
	KmlMultiTrackObjectExtensionGroup []*MultiTrackObjectExtensionGroup `xml:"kml:MultiTrackObjectExtensionGroup"`
	*AbstractGeometryType
}

// MultiTrackSimpleExtensionGroup ...
type MultiTrackSimpleExtensionGroup *AnySimpleType

// MultiTrackObjectExtensionGroup ...
type MultiTrackObjectExtensionGroup *MultiTrackObjectExtensionGroup

// Location ...
type Location *LocationType

// LocationType ...
type LocationType struct {
	KmlLongitude                    float64                         `xml:"kml:longitude"`
	KmlLatitude                     float64                         `xml:"kml:latitude"`
	KmlAltitude                     float64                         `xml:"kml:altitude"`
	KmlLocationSimpleExtensionGroup []*AnySimpleType                `xml:"kml:LocationSimpleExtensionGroup"`
	KmlLocationObjectExtensionGroup []*LocationObjectExtensionGroup `xml:"kml:LocationObjectExtensionGroup"`
	*AbstractObjectType
}

// LocationSimpleExtensionGroup ...
type LocationSimpleExtensionGroup *AnySimpleType

// LocationObjectExtensionGroup ...
type LocationObjectExtensionGroup *LocationObjectExtensionGroup

// Orientation ...
type Orientation *OrientationType

// OrientationType ...
type OrientationType struct {
	KmlHeading                         float64                            `xml:"kml:heading"`
	KmlTilt                            float64                            `xml:"kml:tilt"`
	KmlRoll                            float64                            `xml:"kml:roll"`
	KmlOrientationSimpleExtensionGroup []*AnySimpleType                   `xml:"kml:OrientationSimpleExtensionGroup"`
	KmlOrientationObjectExtensionGroup []*OrientationObjectExtensionGroup `xml:"kml:OrientationObjectExtensionGroup"`
	*AbstractObjectType
}

// OrientationSimpleExtensionGroup ...
type OrientationSimpleExtensionGroup *AnySimpleType

// OrientationObjectExtensionGroup ...
type OrientationObjectExtensionGroup *OrientationObjectExtensionGroup

// Scale ...
type Scale *ScaleType

// ScaleType ...
type ScaleType struct {
	KmlX                         float64                      `xml:"kml:x"`
	KmlY                         float64                      `xml:"kml:y"`
	KmlZ                         float64                      `xml:"kml:z"`
	KmlScaleSimpleExtensionGroup []*AnySimpleType             `xml:"kml:ScaleSimpleExtensionGroup"`
	KmlScaleObjectExtensionGroup []*ScaleObjectExtensionGroup `xml:"kml:ScaleObjectExtensionGroup"`
	*AbstractObjectType
}

// ScaleSimpleExtensionGroup ...
type ScaleSimpleExtensionGroup *AnySimpleType

// ScaleObjectExtensionGroup ...
type ScaleObjectExtensionGroup *ScaleObjectExtensionGroup

// ResourceMap ...
type ResourceMap *ResourceMapType

// ResourceMapType ...
type ResourceMapType struct {
	KmlAlias                           []*AliasType                       `xml:"kml:Alias"`
	KmlResourceMapSimpleExtensionGroup []*AnySimpleType                   `xml:"kml:ResourceMapSimpleExtensionGroup"`
	KmlResourceMapObjectExtensionGroup []*ResourceMapObjectExtensionGroup `xml:"kml:ResourceMapObjectExtensionGroup"`
	*AbstractObjectType
}

// ResourceMapSimpleExtensionGroup ...
type ResourceMapSimpleExtensionGroup *AnySimpleType

// ResourceMapObjectExtensionGroup ...
type ResourceMapObjectExtensionGroup *ResourceMapObjectExtensionGroup

// Alias ...
type Alias *AliasType

// AliasType ...
type AliasType struct {
	KmlTargetHref                string                       `xml:"kml:targetHref"`
	KmlSourceHref                string                       `xml:"kml:sourceHref"`
	KmlAliasSimpleExtensionGroup []*AnySimpleType             `xml:"kml:AliasSimpleExtensionGroup"`
	KmlAliasObjectExtensionGroup []*AliasObjectExtensionGroup `xml:"kml:AliasObjectExtensionGroup"`
	*AbstractObjectType
}

// AliasSimpleExtensionGroup ...
type AliasSimpleExtensionGroup *AnySimpleType

// AliasObjectExtensionGroup is kml:LatLonAltBox is prohibited in kml:GroundOverlay. Use kml:LatLonBox or kml:LatLonQuad instead.
type AliasObjectExtensionGroup *AliasObjectExtensionGroup

// GroundOverlay ...
type GroundOverlay *GroundOverlayType

// GroundOverlayType ...
type GroundOverlayType struct {
	KmlAltitudeModeGroup                 *AltitudeModeGroup
	KmlAltitude                          float64                              `xml:"kml:altitude"`
	KmlAbstractExtentGroup               *AbstractExtentType                  `xml:"kml:AbstractExtentGroup"`
	KmlGroundOverlaySimpleExtensionGroup []*AnySimpleType                     `xml:"kml:GroundOverlaySimpleExtensionGroup"`
	KmlGroundOverlayObjectExtensionGroup []*GroundOverlayObjectExtensionGroup `xml:"kml:GroundOverlayObjectExtensionGroup"`
	*AbstractOverlayType
}

// GroundOverlaySimpleExtensionGroup ...
type GroundOverlaySimpleExtensionGroup *AnySimpleType

// GroundOverlayObjectExtensionGroup ...
type GroundOverlayObjectExtensionGroup *GroundOverlayObjectExtensionGroup

// AbstractExtentGroup ...
type AbstractExtentGroup *AbstractExtentType

// AbstractExtentType ...
type AbstractExtentType struct {
	KmlAbstractExtentSimpleExtensionGroup []*AnySimpleType                      `xml:"kml:AbstractExtentSimpleExtensionGroup"`
	KmlAbstractExtentObjectExtensionGroup []*AbstractExtentObjectExtensionGroup `xml:"kml:AbstractExtentObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractExtentSimpleExtensionGroup ...
type AbstractExtentSimpleExtensionGroup *AnySimpleType

// AbstractExtentObjectExtensionGroup ...
type AbstractExtentObjectExtensionGroup *AbstractExtentObjectExtensionGroup

// LatLonQuad ...
type LatLonQuad *LatLonQuadType

// LatLonQuadType ...
type LatLonQuadType struct {
	KmlCoordinates                    *CoordinatesType                  `xml:"kml:coordinates"`
	KmlLatLonQuadSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:LatLonQuadSimpleExtensionGroup"`
	KmlLatLonQuadObjectExtensionGroup []*LatLonQuadObjectExtensionGroup `xml:"kml:LatLonQuadObjectExtensionGroup"`
	*AbstractExtentType
}

// LatLonQuadSimpleExtensionGroup ...
type LatLonQuadSimpleExtensionGroup *AnySimpleType

// LatLonQuadObjectExtensionGroup is In KML 2.3, the allowed value range in decimal degrees used by kml:east and kml:west was extended by a factor of 2 (from ±180 in KML 2.2) to ±360. This was done in order to accommodate bounding boxes anywhere on the earth, including overlaps of the anti-meridian, and of any size up to full global coverage. With the extension of the longitude range, all degree values, except -360 = 0 = 360 (mod 360), have exactly two equivalent choices modulo 360, e.g. -359 = 1 (mod 360). The latitude range for kml:north and kml:south remain the same as in KML 2.2 and the following constraints C1 (i.e. the non-trivial latitude interval constraint) and C2 (i.e. the non-trivial longitude interval constraint) are unchanged:
//     C1  kml:south < kml:north (non-trivial latitude interval);
//     C2  kml:west < kml:east (non-trivial longitude interval).
// New constraints in KML 2.3 are introduced with the longitude range extension to avoid self overlaps and to preserve uniqueness of longitude interval values:
//     C3  kml:east - kml:west ≤ 360 (non-self-overlap);
//     C4  If (|kml:west| or |kml:east|) > 180, then kml:east > 0 and kml:west < 180 (uniqueness).
// The constraint C3 ensures that the longitude interval does not overlap itself. The constraint C4 ensures the choice of the kml:west and kml:east values are unique for every longitude interval. See also: kml:east, kml:west, kml:north, kml:south.
type LatLonQuadObjectExtensionGroup *LatLonQuadObjectExtensionGroup

// AbstractLatLonBoxGroup ...
type AbstractLatLonBoxGroup *AbstractLatLonBoxType

// AbstractLatLonBoxType ...
type AbstractLatLonBoxType struct {
	KmlNorth                                 float64                                  `xml:"kml:north"`
	KmlSouth                                 float64                                  `xml:"kml:south"`
	KmlEast                                  float64                                  `xml:"kml:east"`
	KmlWest                                  float64                                  `xml:"kml:west"`
	KmlAbstractLatLonBoxSimpleExtensionGroup []*AnySimpleType                         `xml:"kml:AbstractLatLonBoxSimpleExtensionGroup"`
	KmlAbstractLatLonBoxObjectExtensionGroup []*AbstractLatLonBoxObjectExtensionGroup `xml:"kml:AbstractLatLonBoxObjectExtensionGroup"`
	*AbstractExtentType
}

// AbstractLatLonBoxSimpleExtensionGroup ...
type AbstractLatLonBoxSimpleExtensionGroup *AnySimpleType

// AbstractLatLonBoxObjectExtensionGroup ...
type AbstractLatLonBoxObjectExtensionGroup *AbstractLatLonBoxObjectExtensionGroup

// LatLonBox ...
type LatLonBox *LatLonBoxType

// LatLonBoxType ...
type LatLonBoxType struct {
	KmlRotation                      float64                          `xml:"kml:rotation"`
	KmlLatLonBoxSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:LatLonBoxSimpleExtensionGroup"`
	KmlLatLonBoxObjectExtensionGroup []*LatLonBoxObjectExtensionGroup `xml:"kml:LatLonBoxObjectExtensionGroup"`
	*AbstractLatLonBoxType
}

// LatLonBoxSimpleExtensionGroup ...
type LatLonBoxSimpleExtensionGroup *AnySimpleType

// LatLonBoxObjectExtensionGroup ...
type LatLonBoxObjectExtensionGroup *LatLonBoxObjectExtensionGroup

// ScreenOverlay ...
type ScreenOverlay *ScreenOverlayType

// ScreenOverlayType ...
type ScreenOverlayType struct {
	KmlOverlayXY                         *Vec2Type                            `xml:"kml:overlayXY"`
	KmlScreenXY                          *Vec2Type                            `xml:"kml:screenXY"`
	KmlRotationXY                        *Vec2Type                            `xml:"kml:rotationXY"`
	KmlSize                              *Vec2Type                            `xml:"kml:size"`
	KmlRotation                          float64                              `xml:"kml:rotation"`
	KmlScreenOverlaySimpleExtensionGroup []*AnySimpleType                     `xml:"kml:ScreenOverlaySimpleExtensionGroup"`
	KmlScreenOverlayObjectExtensionGroup []*ScreenOverlayObjectExtensionGroup `xml:"kml:ScreenOverlayObjectExtensionGroup"`
	*AbstractOverlayType
}

// ScreenOverlaySimpleExtensionGroup ...
type ScreenOverlaySimpleExtensionGroup *AnySimpleType

// ScreenOverlayObjectExtensionGroup ...
type ScreenOverlayObjectExtensionGroup *ScreenOverlayObjectExtensionGroup

// PhotoOverlay ...
type PhotoOverlay *PhotoOverlayType

// PhotoOverlayType ...
type PhotoOverlayType struct {
	KmlRotation                         float64                             `xml:"kml:rotation"`
	KmlViewVolume                       *ViewVolumeType                     `xml:"kml:ViewVolume"`
	KmlImagePyramid                     *ImagePyramidType                   `xml:"kml:ImagePyramid"`
	KmlPoint                            *PointType                          `xml:"kml:Point"`
	KmlAbstractShape                    string                              `xml:"kml:abstractShape"`
	KmlPhotoOverlaySimpleExtensionGroup []*AnySimpleType                    `xml:"kml:PhotoOverlaySimpleExtensionGroup"`
	KmlPhotoOverlayObjectExtensionGroup []*PhotoOverlayObjectExtensionGroup `xml:"kml:PhotoOverlayObjectExtensionGroup"`
	*AbstractOverlayType
}

// PhotoOverlaySimpleExtensionGroup ...
type PhotoOverlaySimpleExtensionGroup *AnySimpleType

// PhotoOverlayObjectExtensionGroup ...
type PhotoOverlayObjectExtensionGroup *PhotoOverlayObjectExtensionGroup

// ViewVolume ...
type ViewVolume *ViewVolumeType

// ViewVolumeType ...
type ViewVolumeType struct {
	KmlLeftFov                        float64                           `xml:"kml:leftFov"`
	KmlRightFov                       float64                           `xml:"kml:rightFov"`
	KmlBottomFov                      float64                           `xml:"kml:bottomFov"`
	KmlTopFov                         float64                           `xml:"kml:topFov"`
	KmlNear                           float64                           `xml:"kml:near"`
	KmlViewVolumeSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:ViewVolumeSimpleExtensionGroup"`
	KmlViewVolumeObjectExtensionGroup []*ViewVolumeObjectExtensionGroup `xml:"kml:ViewVolumeObjectExtensionGroup"`
	*AbstractObjectType
}

// ViewVolumeSimpleExtensionGroup ...
type ViewVolumeSimpleExtensionGroup *AnySimpleType

// ViewVolumeObjectExtensionGroup ...
type ViewVolumeObjectExtensionGroup *ViewVolumeObjectExtensionGroup

// ImagePyramid ...
type ImagePyramid *ImagePyramidType

// ImagePyramidType ...
type ImagePyramidType struct {
	KmlTileSize                         int                                 `xml:"kml:tileSize"`
	KmlMaxWidth                         int                                 `xml:"kml:maxWidth"`
	KmlMaxHeight                        int                                 `xml:"kml:maxHeight"`
	KmlAbstractGridOrigin               string                              `xml:"kml:abstractGridOrigin"`
	KmlImagePyramidSimpleExtensionGroup []*AnySimpleType                    `xml:"kml:ImagePyramidSimpleExtensionGroup"`
	KmlImagePyramidObjectExtensionGroup []*ImagePyramidObjectExtensionGroup `xml:"kml:ImagePyramidObjectExtensionGroup"`
	*AbstractObjectType
}

// ImagePyramidSimpleExtensionGroup ...
type ImagePyramidSimpleExtensionGroup *AnySimpleType

// ImagePyramidObjectExtensionGroup ...
type ImagePyramidObjectExtensionGroup *ImagePyramidObjectExtensionGroup

// Style ...
type Style *StyleType

// StyleType ...
type StyleType struct {
	KmlIconStyle                 *IconStyleType               `xml:"kml:IconStyle"`
	KmlLabelStyle                *LabelStyleType              `xml:"kml:LabelStyle"`
	KmlLineStyle                 *LineStyleType               `xml:"kml:LineStyle"`
	KmlPolyStyle                 *PolyStyleType               `xml:"kml:PolyStyle"`
	KmlBalloonStyle              *BalloonStyleType            `xml:"kml:BalloonStyle"`
	KmlListStyle                 *ListStyleType               `xml:"kml:ListStyle"`
	KmlStyleSimpleExtensionGroup []*AnySimpleType             `xml:"kml:StyleSimpleExtensionGroup"`
	KmlStyleObjectExtensionGroup []*StyleObjectExtensionGroup `xml:"kml:StyleObjectExtensionGroup"`
	*AbstractStyleSelectorType
}

// StyleSimpleExtensionGroup ...
type StyleSimpleExtensionGroup *AnySimpleType

// StyleObjectExtensionGroup ...
type StyleObjectExtensionGroup *StyleObjectExtensionGroup

// StyleMap ...
type StyleMap *StyleMapType

// StyleMapType ...
type StyleMapType struct {
	KmlPair                         []*PairType                     `xml:"kml:Pair"`
	KmlStyleMapSimpleExtensionGroup []*AnySimpleType                `xml:"kml:StyleMapSimpleExtensionGroup"`
	KmlStyleMapObjectExtensionGroup []*StyleMapObjectExtensionGroup `xml:"kml:StyleMapObjectExtensionGroup"`
	*AbstractStyleSelectorType
}

// StyleMapSimpleExtensionGroup ...
type StyleMapSimpleExtensionGroup *AnySimpleType

// StyleMapObjectExtensionGroup ...
type StyleMapObjectExtensionGroup *StyleMapObjectExtensionGroup

// Pair ...
type Pair *PairType

// PairType ...
type PairType struct {
	KmlAbstractKey                string                      `xml:"kml:abstractKey"`
	KmlStyleUrl                   string                      `xml:"kml:styleUrl"`
	KmlAbstractStyleSelectorGroup *AbstractStyleSelectorType  `xml:"kml:AbstractStyleSelectorGroup"`
	KmlPairSimpleExtensionGroup   []*AnySimpleType            `xml:"kml:PairSimpleExtensionGroup"`
	KmlPairObjectExtensionGroup   []*PairObjectExtensionGroup `xml:"kml:PairObjectExtensionGroup"`
	*AbstractObjectType
}

// PairSimpleExtensionGroup ...
type PairSimpleExtensionGroup *AnySimpleType

// PairObjectExtensionGroup ...
type PairObjectExtensionGroup *PairObjectExtensionGroup

// AbstractSubStyleGroup ...
type AbstractSubStyleGroup *AbstractSubStyleType

// AbstractSubStyleType ...
type AbstractSubStyleType struct {
	KmlAbstractSubStyleSimpleExtensionGroup []*AnySimpleType                        `xml:"kml:AbstractSubStyleSimpleExtensionGroup"`
	KmlAbstractSubStyleObjectExtensionGroup []*AbstractSubStyleObjectExtensionGroup `xml:"kml:AbstractSubStyleObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractSubStyleSimpleExtensionGroup ...
type AbstractSubStyleSimpleExtensionGroup *AnySimpleType

// AbstractSubStyleObjectExtensionGroup ...
type AbstractSubStyleObjectExtensionGroup *AbstractSubStyleObjectExtensionGroup

// AbstractColorStyleGroup ...
type AbstractColorStyleGroup *AbstractColorStyleType

// AbstractColorStyleType ...
type AbstractColorStyleType struct {
	KmlColor                                  string                                    `xml:"kml:color"`
	KmlAbstractColorMode                      string                                    `xml:"kml:abstractColorMode"`
	KmlAbstractColorStyleSimpleExtensionGroup []*AnySimpleType                          `xml:"kml:AbstractColorStyleSimpleExtensionGroup"`
	KmlAbstractColorStyleObjectExtensionGroup []*AbstractColorStyleObjectExtensionGroup `xml:"kml:AbstractColorStyleObjectExtensionGroup"`
	*AbstractSubStyleType
}

// AbstractColorStyleObjectExtensionGroup ...
type AbstractColorStyleObjectExtensionGroup *AbstractColorStyleObjectExtensionGroup

// AbstractColorStyleSimpleExtensionGroup ...
type AbstractColorStyleSimpleExtensionGroup *AnySimpleType

// IconStyle ...
type IconStyle *IconStyleType

// IconStyleType ...
type IconStyleType struct {
	KmlScale                         float64                          `xml:"kml:scale"`
	KmlHeading                       float64                          `xml:"kml:heading"`
	Icon                             *BasicLinkType                   `xml:"Icon"`
	KmlHotSpot                       *Vec2Type                        `xml:"kml:hotSpot"`
	KmlIconStyleSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:IconStyleSimpleExtensionGroup"`
	KmlIconStyleObjectExtensionGroup []*IconStyleObjectExtensionGroup `xml:"kml:IconStyleObjectExtensionGroup"`
	*AbstractColorStyleType
}

// IconStyleSimpleExtensionGroup ...
type IconStyleSimpleExtensionGroup *AnySimpleType

// IconStyleObjectExtensionGroup ...
type IconStyleObjectExtensionGroup *IconStyleObjectExtensionGroup

// BasicLinkType ...
type BasicLinkType struct {
	KmlHref                          string                           `xml:"kml:href"`
	KmlBasicLinkSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:BasicLinkSimpleExtensionGroup"`
	KmlBasicLinkObjectExtensionGroup []*BasicLinkObjectExtensionGroup `xml:"kml:BasicLinkObjectExtensionGroup"`
	*AbstractObjectType
}

// BasicLinkSimpleExtensionGroup ...
type BasicLinkSimpleExtensionGroup *AnySimpleType

// BasicLinkObjectExtensionGroup ...
type BasicLinkObjectExtensionGroup *BasicLinkObjectExtensionGroup

// LabelStyle ...
type LabelStyle *LabelStyleType

// LabelStyleType ...
type LabelStyleType struct {
	KmlScale                          float64                           `xml:"kml:scale"`
	KmlLabelStyleSimpleExtensionGroup []*AnySimpleType                  `xml:"kml:LabelStyleSimpleExtensionGroup"`
	KmlLabelStyleObjectExtensionGroup []*LabelStyleObjectExtensionGroup `xml:"kml:LabelStyleObjectExtensionGroup"`
	*AbstractColorStyleType
}

// LabelStyleSimpleExtensionGroup ...
type LabelStyleSimpleExtensionGroup *AnySimpleType

// LabelStyleObjectExtensionGroup ...
type LabelStyleObjectExtensionGroup *LabelStyleObjectExtensionGroup

// LineStyle ...
type LineStyle *LineStyleType

// LineStyleType ...
type LineStyleType struct {
	KmlWidth                         float64                          `xml:"kml:width"`
	KmlLineStyleSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:LineStyleSimpleExtensionGroup"`
	KmlLineStyleObjectExtensionGroup []*LineStyleObjectExtensionGroup `xml:"kml:LineStyleObjectExtensionGroup"`
	*AbstractColorStyleType
}

// LineStyleSimpleExtensionGroup ...
type LineStyleSimpleExtensionGroup *AnySimpleType

// LineStyleObjectExtensionGroup ...
type LineStyleObjectExtensionGroup *LineStyleObjectExtensionGroup

// PolyStyle ...
type PolyStyle *PolyStyleType

// PolyStyleType ...
type PolyStyleType struct {
	KmlFill                          bool                             `xml:"kml:fill"`
	KmlOutline                       bool                             `xml:"kml:outline"`
	KmlPolyStyleSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:PolyStyleSimpleExtensionGroup"`
	KmlPolyStyleObjectExtensionGroup []*PolyStyleObjectExtensionGroup `xml:"kml:PolyStyleObjectExtensionGroup"`
	*AbstractColorStyleType
}

// PolyStyleSimpleExtensionGroup ...
type PolyStyleSimpleExtensionGroup *AnySimpleType

// PolyStyleObjectExtensionGroup is kml:color was deprecated in the context of BalloonStyle in KML 2.1
type PolyStyleObjectExtensionGroup *PolyStyleObjectExtensionGroup

// BalloonStyle ...
type BalloonStyle *BalloonStyleType

// BalloonStyleType ...
type BalloonStyleType struct {
	KmlAbstractBgColorGroup             string                              `xml:"kml:AbstractBgColorGroup"`
	KmlTextColor                        string                              `xml:"kml:textColor"`
	KmlText                             string                              `xml:"kml:text"`
	KmlAbstractDisplayMode              string                              `xml:"kml:abstractDisplayMode"`
	KmlBalloonStyleSimpleExtensionGroup []*AnySimpleType                    `xml:"kml:BalloonStyleSimpleExtensionGroup"`
	KmlBalloonStyleObjectExtensionGroup []*BalloonStyleObjectExtensionGroup `xml:"kml:BalloonStyleObjectExtensionGroup"`
	*AbstractSubStyleType
}

// BalloonStyleSimpleExtensionGroup ...
type BalloonStyleSimpleExtensionGroup *AnySimpleType

// BalloonStyleObjectExtensionGroup ...
type BalloonStyleObjectExtensionGroup *BalloonStyleObjectExtensionGroup

// ListStyle ...
type ListStyle *ListStyleType

// ListStyleType ...
type ListStyleType struct {
	KmlAbstractListItemType          string                           `xml:"kml:abstractListItemType"`
	KmlBgColor                       string                           `xml:"kml:bgColor"`
	KmlItemIcon                      []*ItemIconType                  `xml:"kml:ItemIcon"`
	KmlMaxSnippetLines               int                              `xml:"kml:maxSnippetLines"`
	KmlListStyleSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:ListStyleSimpleExtensionGroup"`
	KmlListStyleObjectExtensionGroup []*ListStyleObjectExtensionGroup `xml:"kml:ListStyleObjectExtensionGroup"`
	*AbstractSubStyleType
}

// ListStyleSimpleExtensionGroup ...
type ListStyleSimpleExtensionGroup *AnySimpleType

// ListStyleObjectExtensionGroup ...
type ListStyleObjectExtensionGroup *ListStyleObjectExtensionGroup

// ItemIcon ...
type ItemIcon *ItemIconType

// ItemIconType ...
type ItemIconType struct {
	KmlAbstractState                *AnySimpleType                  `xml:"kml:abstractState"`
	KmlHref                         string                          `xml:"kml:href"`
	KmlItemIconSimpleExtensionGroup []*AnySimpleType                `xml:"kml:ItemIconSimpleExtensionGroup"`
	KmlItemIconObjectExtensionGroup []*ItemIconObjectExtensionGroup `xml:"kml:ItemIconObjectExtensionGroup"`
	*AbstractObjectType
}

// ItemIconSimpleExtensionGroup ...
type ItemIconSimpleExtensionGroup *AnySimpleType

// ItemIconObjectExtensionGroup ...
type ItemIconObjectExtensionGroup *ItemIconObjectExtensionGroup

// TimeStamp ...
type TimeStamp *TimeStampType

// TimeStampType ...
type TimeStampType struct {
	KmlWhen                          *DateTimeType                    `xml:"kml:when"`
	KmlTimeStampSimpleExtensionGroup []*AnySimpleType                 `xml:"kml:TimeStampSimpleExtensionGroup"`
	KmlTimeStampObjectExtensionGroup []*TimeStampObjectExtensionGroup `xml:"kml:TimeStampObjectExtensionGroup"`
	*AbstractTimePrimitiveType
}

// TimeStampSimpleExtensionGroup ...
type TimeStampSimpleExtensionGroup *AnySimpleType

// TimeStampObjectExtensionGroup ...
type TimeStampObjectExtensionGroup *TimeStampObjectExtensionGroup

// TimeSpan ...
type TimeSpan *TimeSpanType

// TimeSpanType ...
type TimeSpanType struct {
	KmlBegin                        *DateTimeType                   `xml:"kml:begin"`
	KmlEnd                          *DateTimeType                   `xml:"kml:end"`
	KmlTimeSpanSimpleExtensionGroup []*AnySimpleType                `xml:"kml:TimeSpanSimpleExtensionGroup"`
	KmlTimeSpanObjectExtensionGroup []*TimeSpanObjectExtensionGroup `xml:"kml:TimeSpanObjectExtensionGroup"`
	*AbstractTimePrimitiveType
}

// TimeSpanSimpleExtensionGroup ...
type TimeSpanSimpleExtensionGroup *AnySimpleType

// TimeSpanObjectExtensionGroup ...
type TimeSpanObjectExtensionGroup *TimeSpanObjectExtensionGroup

// Update ...
type Update *UpdateType

// UpdateType ...
type UpdateType struct {
	KmlTargetHref                string                  `xml:"kml:targetHref"`
	KmlAbstractUpdateOptionGroup []string                `xml:"kml:AbstractUpdateOptionGroup"`
	KmlUpdateExtensionGroup      []*UpdateExtensionGroup `xml:"kml:UpdateExtensionGroup"`
}

// UpdateExtensionGroup ...
type UpdateExtensionGroup *UpdateExtensionGroup

// Create ...
type Create *CreateType

// CreateType ...
type CreateType struct {
	KmlAbstractContainerGroup []*AbstractContainerType `xml:"kml:AbstractContainerGroup"`
	KmlMultiTrack             []*MultiTrackType        `xml:"kml:MultiTrack"`
	KmlMultiGeometry          []*MultiGeometryType     `xml:"kml:MultiGeometry"`
}

// Delete ...
type Delete *DeleteType

// DeleteType ...
type DeleteType struct {
	KmlAbstractFeatureGroup  []*AbstractFeatureType  `xml:"kml:AbstractFeatureGroup"`
	KmlAbstractGeometryGroup []*AbstractGeometryType `xml:"kml:AbstractGeometryGroup"`
}

// Change ...
type Change *ChangeType

// ChangeType ...
type ChangeType struct {
	KmlAbstractObjectGroup []*AbstractObjectType `xml:"kml:AbstractObjectGroup"`
}

// AbstractTourPrimitiveGroup ...
type AbstractTourPrimitiveGroup *AbstractTourPrimitiveType

// AbstractTourPrimitiveType ...
type AbstractTourPrimitiveType struct {
	KmlAbstractTourPrimitiveSimpleExtensionGroup []*AnySimpleType                             `xml:"kml:AbstractTourPrimitiveSimpleExtensionGroup"`
	KmlAbstractTourPrimitiveObjectExtensionGroup []*AbstractTourPrimitiveObjectExtensionGroup `xml:"kml:AbstractTourPrimitiveObjectExtensionGroup"`
	*AbstractObjectType
}

// AbstractTourPrimitiveSimpleExtensionGroup ...
type AbstractTourPrimitiveSimpleExtensionGroup *AnySimpleType

// AbstractTourPrimitiveObjectExtensionGroup ...
type AbstractTourPrimitiveObjectExtensionGroup *AbstractTourPrimitiveObjectExtensionGroup

// AnimatedUpdate ...
type AnimatedUpdate *AnimatedUpdateType

// AnimatedUpdateType ...
type AnimatedUpdateType struct {
	KmlDuration                           string                                `xml:"kml:duration"`
	KmlUpdate                             *UpdateType                           `xml:"kml:Update"`
	KmlDelayedStart                       float64                               `xml:"kml:delayedStart"`
	KmlAnimatedUpdateSimpleExtensionGroup []*AnySimpleType                      `xml:"kml:AnimatedUpdateSimpleExtensionGroup"`
	KmlAnimatedUpdateObjectExtensionGroup []*AnimatedUpdateObjectExtensionGroup `xml:"kml:AnimatedUpdateObjectExtensionGroup"`
	*AbstractTourPrimitiveType
}

// AnimatedUpdateSimpleExtensionGroup ...
type AnimatedUpdateSimpleExtensionGroup *AnySimpleType

// AnimatedUpdateObjectExtensionGroup ...
type AnimatedUpdateObjectExtensionGroup *AnimatedUpdateObjectExtensionGroup

// FlyTo ...
type FlyTo *FlyToType

// FlyToType ...
type FlyToType struct {
	KmlDuration                  string                       `xml:"kml:duration"`
	KmlAbstractFlyToMode         string                       `xml:"kml:abstractFlyToMode"`
	KmlAbstractViewGroup         *AbstractViewType            `xml:"kml:AbstractViewGroup"`
	KmlFlyToSimpleExtensionGroup []*AnySimpleType             `xml:"kml:FlyToSimpleExtensionGroup"`
	KmlFlyToObjectExtensionGroup []*FlyToObjectExtensionGroup `xml:"kml:FlyToObjectExtensionGroup"`
	*AbstractTourPrimitiveType
}

// FlyToSimpleExtensionGroup ...
type FlyToSimpleExtensionGroup *AnySimpleType

// FlyToObjectExtensionGroup ...
type FlyToObjectExtensionGroup *FlyToObjectExtensionGroup

// Playlist ...
type Playlist *PlaylistType

// PlaylistType ...
type PlaylistType struct {
	KmlAbstractTourPrimitiveGroup   []*AbstractTourPrimitiveType    `xml:"kml:AbstractTourPrimitiveGroup"`
	KmlPlaylistSimpleExtensionGroup []*AnySimpleType                `xml:"kml:PlaylistSimpleExtensionGroup"`
	KmlPlaylistObjectExtensionGroup []*PlaylistObjectExtensionGroup `xml:"kml:PlaylistObjectExtensionGroup"`
	*AbstractObjectType
}

// PlaylistSimpleExtensionGroup ...
type PlaylistSimpleExtensionGroup *AnySimpleType

// PlaylistObjectExtensionGroup ...
type PlaylistObjectExtensionGroup *PlaylistObjectExtensionGroup

// SoundCue ...
type SoundCue *SoundCueType

// SoundCueType ...
type SoundCueType struct {
	KmlHref                         string                          `xml:"kml:href"`
	KmlDelayedStart                 float64                         `xml:"kml:delayedStart"`
	KmlSoundCueSimpleExtensionGroup []*AnySimpleType                `xml:"kml:SoundCueSimpleExtensionGroup"`
	KmlSoundCueObjectExtensionGroup []*SoundCueObjectExtensionGroup `xml:"kml:SoundCueObjectExtensionGroup"`
	*AbstractTourPrimitiveType
}

// SoundCueSimpleExtensionGroup ...
type SoundCueSimpleExtensionGroup *AnySimpleType

// SoundCueObjectExtensionGroup ...
type SoundCueObjectExtensionGroup *SoundCueObjectExtensionGroup

// Tour ...
type Tour *TourType

// TourType ...
type TourType struct {
	KmlPlaylist                 *PlaylistType               `xml:"kml:Playlist"`
	KmlTourSimpleExtensionGroup []*AnySimpleType            `xml:"kml:TourSimpleExtensionGroup"`
	KmlTourObjectExtensionGroup []*TourObjectExtensionGroup `xml:"kml:TourObjectExtensionGroup"`
	*AbstractFeatureType
}

// TourSimpleExtensionGroup ...
type TourSimpleExtensionGroup *AnySimpleType

// TourObjectExtensionGroup ...
type TourObjectExtensionGroup *TourObjectExtensionGroup

// TourControl ...
type TourControl *TourControlType

// TourControlType ...
type TourControlType struct {
	KmlAbstractPlayMode                string                             `xml:"kml:abstractPlayMode"`
	KmlTourControlSimpleExtensionGroup []*AnySimpleType                   `xml:"kml:TourControlSimpleExtensionGroup"`
	KmlTourControlObjectExtensionGroup []*TourControlObjectExtensionGroup `xml:"kml:TourControlObjectExtensionGroup"`
	*AbstractTourPrimitiveType
}

// TourControlSimpleExtensionGroup ...
type TourControlSimpleExtensionGroup *AnySimpleType

// TourControlObjectExtensionGroup ...
type TourControlObjectExtensionGroup *TourControlObjectExtensionGroup

// Wait ...
type Wait *WaitType

// WaitType ...
type WaitType struct {
	KmlDuration                 string                      `xml:"kml:duration"`
	KmlWaitSimpleExtensionGroup []*AnySimpleType            `xml:"kml:WaitSimpleExtensionGroup"`
	KmlWaitObjectExtensionGroup []*WaitObjectExtensionGroup `xml:"kml:WaitObjectExtensionGroup"`
	*AbstractTourPrimitiveType
}

// WaitSimpleExtensionGroup ...
type WaitSimpleExtensionGroup *AnySimpleType

// WaitObjectExtensionGroup ...
type WaitObjectExtensionGroup *WaitObjectExtensionGroup
